name: Run `runbenchmark.py`

on:
  schedule:
    - cron: '0/5 * * * *'

  workflow_dispatch:
    inputs:
      python_version:
        default: '3.9'
      os:
        default: 'ubuntu-latest'
      framework:
        default: 'randomforest'
      options:
        default: ''

jobs:
  set_os:
    runs-on: 'ubuntu-latest'
    outputs:
      os: ${{ steps.os.outputs.os }}
    steps:
      - id: os
        run: |
          echo "os=${{ inputs.os }}" >> "$GITHUB_OUTPUT"
          if [[ -z ${{ inputs.os }} ]]; then
            echo "os=ubuntu-latest" >> "$GITHUB_OUTPUT"
          fi

  run_benchmark:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python: ['3.9']
        framework: ['autogluon', 'autosklearn', 'flaml', 'gama', 'h2oautoml','lama', 'naml', 'randomforest', 'tpot']
        include:
          - python: ${{ inputs.python_version }}
            os: ${{ inputs.os }}
            framework: ${{ inputs.framework }}
            options: ${{ inputs.options }}

    runs-on: ${{ matrix.os }}
    steps:
      - name: Stop Matrix Jobs on Dispatch
        if: (inputs.python_version != '') && !(( matrix.framework == inputs.framework ) && ( matrix.os == inputs.os )&& ( matrix.python == inputs.python_version ))
        # (The job is started by a workflow dispatch) && !(this is the matrix job that represents the workflow trigger)
        run: |
          exit 1
      - name: Runs on ${{ inputs.os }}
        run: echo Preparing to benchmark ${{ inputs.framework }} ${{ inputs.options }}
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Install Py${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
      - name: Install benchmark dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Install ${{ inputs.framework }}
        run: python runbenchmark.py ${{ inputs.framework }} -s only
        env:
          GITHUB_PAT: ${{ secrets.PUBLIC_ACCESS_GITHUB_PAT }}
      - name: Benchmark ${{ inputs.framework }}
        run: python runbenchmark.py ${{ inputs.framework }} ${{ inputs.options }}
